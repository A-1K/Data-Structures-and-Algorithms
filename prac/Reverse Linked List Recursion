#include <iostream>
using namespace std;

struct Node {
    int data;
    struct Node* next;
};

struct Node* head;

void Insert(int data, int n) {
    Node* temp1 = new Node();
    temp1->data = data;
    temp1->next = NULL;

    if (n == 1) {
        temp1->next = head;
        head = temp1;
        return;
    }

    Node* temp2 = head;
    for (int i = 0; i < n-2; i++) { // start at head, go to (n-1)th node
        temp2 = temp2->next;
    }

    temp1->next = temp2->next;
    temp2->next = temp1;
}
void Print(struct Node* p) { // using recursion
    if (p == NULL) {
        cout << "a\n";
        return; // Exit
    }

    cout << p->data << " "; 

    Print (p->next); // recursion

}

void reverse(struct Node* p) { // using recursion
    
    if (p->next == NULL) { 
        head = p;
        return; 
    }

    reverse (p->next); // go till end, point head to last node

    Node* q = p->next; 
    q->next = p; // cut last nodes link, link it to previous node
    p->next = NULL;

}



int main()
{
    head = NULL; // list is empty initally
    Insert(2,1); // 2
    Insert(3,2); // 2,3
    Insert(4,1); // 4,2,3
    Insert(5,2); // 4,5,2,3

    Print (head);

    reverse (head);
    cout << "\n\n";
    Print (head);
    
    return 0;
}
